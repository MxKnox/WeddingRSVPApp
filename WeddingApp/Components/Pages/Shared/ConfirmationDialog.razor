@* Reusable Native Blazor Confirmation Dialog Component *@

@if (IsVisible)
{
    <div style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); display: flex; align-items: center; justify-content: center; z-index: 1000;">
        <div class="glass-card animate-fade-in" style="width: 90%; max-width: 600px; text-align: center;">
            <h4 style="color: var(--primary); font-family: var(--font-display); margin-bottom: var(--space-lg);">@Title</h4>
            <p style="color: var(--dark-gray); margin-bottom: var(--space-xl);">@Message</p>
            <div style="display: flex; gap: var(--space-md); justify-content: center;">
                <button class="btn btn-ghost" @onclick="OnCancel">@CancelText</button>
                <button class="btn @ConfirmButtonClass" @onclick="OnConfirm">@ConfirmText</button>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public string Title { get; set; } = "Confirm";
    [Parameter] public string Message { get; set; } = "Are you sure?";
    [Parameter] public string ConfirmText { get; set; } = "Yes";
    [Parameter] public string CancelText { get; set; } = "Cancel";
    [Parameter] public string ConfirmButtonClass { get; set; } = "btn-primary";
    [Parameter] public EventCallback<bool> OnConfirmation { get; set; }

    private async Task OnConfirm()
    {
        IsVisible = false;
        await OnConfirmation.InvokeAsync(true);
    }

    private async Task OnCancel()
    {
        IsVisible = false;
        await OnConfirmation.InvokeAsync(false);
    }
}
