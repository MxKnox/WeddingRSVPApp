@using Microsoft.Extensions.Options
@using WeddingApp.Data.Schedule
@using WeddingApp.Options
@inject IOptions<GoogleMapsOptions> Options;
@inject IJSRuntime Js

<div class="location-card @(IsCompact ? "compact" : "")"
     style="padding: var(--space-lg); background: var(--light-gray); border-radius: var(--radius-md);">
    

    @if (!string.IsNullOrEmpty(Location.Address))
    {
        <p style="font-size: var(--text-sm); color: var(--dark-gray); margin-bottom: var(--space-sm);">
            @Location.Address
        </p>
    }

    <div style="display: flex; gap: var(--space-lg); flex-wrap: wrap;">
        @if (!string.IsNullOrEmpty(Location.ContactDetails))
        {
            <span style="font-size: var(--text-sm); color: var(--dark-gray);">
                📞 @Location.ContactDetails
            </span>
        }

        @if (!string.IsNullOrEmpty(Location.Website))
        {
            <a href="@Location.Website"
               target="_blank"
               style="font-size: var(--text-sm); color: var(--primary);">
                🌐 Website
            </a>
        }
    </div>

    @if (!IsCompact && !string.IsNullOrEmpty(Location.Address) && !String.IsNullOrEmpty(Options.Value.ApiKey))
    {
        <div style="margin-top: var(--space-lg);">
            <iframe src="@GetGoogleMapsEmbedUrl(Location.Address)"
                    width="100%"
                    height="300"
                    style="border: 0; border-radius: var(--radius-md);"
                    allowfullscreen
                    loading="lazy"
                    referrerpolicy="no-referrer-when-downgrade">
            </iframe>
        </div>
    }
</div>

@code {
    [Parameter] public Location Location { get; set; } = default!;

    [Parameter] public bool IsCompact { get; set; } = false;

    private string GetGoogleMapsEmbedUrl(string address)
    {
        var encodedAddress = Uri.EscapeDataString(address);
        // Note: In production, you'd want to use the Google Maps API key from configuration
        return $"https://www.google.com/maps/embed/v1/place?key={Options.Value.ApiKey}&q={encodedAddress}";
    }

}